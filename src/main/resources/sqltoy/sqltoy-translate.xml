<?xml version="1.0" encoding="UTF-8"?>
<sagacity
		xmlns="http://www.sagframe.com/schema/sqltoy-translate"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.sagframe.com/schema/sqltoy-translate http://www.sagframe.com/schema/sqltoy/sqltoy-translate.xsd">

	<!-- 项目启动将字典数据作为缓存 -->

	<!-- 可以通过disk-store-path 设置缓存保存的文件路径 -->
	<!-- <cache-translates disk-store-path="./translateCaches"> -->
	<cache-translates default-heap="500"
					  default-keep-alive="1800">
		<!-- 可以用spring bean方式来实现缓存:针对数据字典方法可以有一个字典分类的参数 -->
		<!-- <service-translate cache="dictKeyNameCache" service="dictService"
            method="getDictByType" keep-alive="1800" /> -->
		<!-- 可以用rest 方式来实现缓存 -->
		<!-- <rest-translate cache="dictKeyNameCache" url="http://xxxx/common/getDictByType"/> -->

		<!-- 基于sql直接查询的方式获取缓存 -->
		<sql-translate cache="dictKeyName"
					   datasource="dataSource" heap="400">
			<sql>
				<![CDATA[
					select ID,ANA_TYPE_NAME
					from ana_type
					where ID = :id
					order by ID
				]]>
			</sql>
		</sql-translate>

		<!-- 用户ID和姓名的缓存 -->
		<sql-translate cache="userIdName"
					   datasource="dataSource">
			<sql>
				<![CDATA[
					select ID,USER_NAME
					from user
				]]>
			</sql>
		</sql-translate>

		<!-- 语录的缓存 -->
		<sql-translate cache="anaIdTitle"
					   datasource="dataSource">
			<sql>
				<![CDATA[
					select ID,ANA_TITLE
					from ana
				]]>
			</sql>
		</sql-translate>
	</cache-translates>

	<!-- 缓存刷新检测,可以提供多个基于sql、service、rest服务检测 -->
	<cache-update-checkers>
		<!-- 增量更新，检测到变化直接更新缓存 -->
		<!--<sql-increment-checker cache="staffIdName"-->
							   <!--check-frequency="30" datasource="dataSource">-->
			<!--<sql><![CDATA[-->
			<!--&#45;&#45;#not_debug#&#45;&#45;-->
			<!--select STAFF_ID,STAFF_NAME,STATUS-->
			<!--from SQLTOY_STAFF_INFO-->
	        <!--where UPDATE_TIME >=:lastUpdateTime-->
			<!--]]></sql>-->
		<!--</sql-increment-checker>-->

		<!-- 增量更新检测,直接将查询结果更新当前缓存, has-inside-group="true" 查询结果第一列必须是缓存分类 -->
		<!--<sql-increment-checker cache="dictKeyName"-->
							   <!--check-frequency="15" has-inside-group="true" datasource="dataSource">-->
			<!--<sql><![CDATA[-->
			<!--&#45;&#45;#not_debug#&#45;&#45;-->
			<!--select t.DICT_TYPE,t.DICT_KEY,t.DICT_NAME,t.STATUS-->
			<!--from SQLTOY_DICT_DETAIL t-->
	        <!--where t.UPDATE_TIME>=:lastUpdateTime-->
			<!--]]></sql>-->
		<!--</sql-increment-checker>-->

		<!-- 基于sql的缓存更新检测 -->
		<!--<sql-increment-checker cache="organIdName"-->
							   <!--check-frequency="60" datasource="dataSource">-->
			<!--<sql><![CDATA[-->
			<!--&#45;&#45;#not_debug#&#45;&#45;-->
			<!--select ORGAN_ID,ORGAN_NAME-->
			<!--from SQLTOY_ORGAN_INFO-->
			<!--where UPDATE_TIME >=:lastUpdateTime-->
			<!--]]></sql>-->
		<!--</sql-increment-checker>-->
		<!-- 缓存更新检测返回的数据格式List<{cacheName,cacheType}> cacheType 只在类似数据字典表需要体现具体哪个字典分类，其他缓存为null即可 -->
		<!-- 基于service 形式的缓存更新检测 -->
		<!-- <service-increment-checker service="cacheChangeCheckService" method="getChangeCache"
            check-frequency="15"/> -->

		<!-- 基于rest 形式的缓存更新检测 -->
		<!-- <rest-increment-checker url="http://xxxx/common/getChangeCache" check-frequency="15"/> -->
	</cache-update-checkers>
</sagacity>